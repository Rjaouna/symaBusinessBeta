<div class="bg-white py-2 px-2 rounded shadow-sm my-2 px-3 mx-2">
<h6 class="mb-1 border-bottom border-secondary fw-bold text-uppercase"> Espace administrateur</h6>
    <div class="d-flex justify-content-center">
        <div class="row my-4 w-100">
            <!-- Colonne 1 -->
            <div class="col-md-2 my-2">
                <a href="{{ path('app_commande_index') }}" class="shadow-sm btn btn-outline-secondary position-relative d-flex flex-column align-items-center w-100">
                    <i class="bi bi-cart fs-4 text-secondary"></i>
                    <span class="mt-2">Liste des Cdes</span>
                    <span id="totalEnAttente" class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-primary">
                        00+
                    </span>
                </a>
            </div>

            <div class="col-md-2 my-2">
                <a href="{{ path('users_with_orders') }}" class="shadow-sm btn btn-outline-secondary position-relative d-flex flex-column align-items-center w-100">
                    <i class="bi bi-upc-scan fs-4 text-secondary"></i>
                    <span class="mt-2">Validation Cdes</span>
                </a>
            </div>

            <!-- Colonne 2 -->
            <div class="col-md-2 my-2">
                <a href="{{ path('app_quota_index') }}" class="shadow-sm btn btn-outline-secondary position-relative d-flex flex-column align-items-center w-100">
                    <i class="bi bi-speedometer fs-4 text-secondary"></i>
                    <span class="mt-2">Gestion des quotas</span>
                </a>
            </div>

            <!-- Colonne 3 -->
            <div class="col-md-2 my-2">
                <a href="{{ path('app_bonus_index') }}" class="shadow-sm btn btn-outline-secondary position-relative d-flex flex-column align-items-center w-100">
                    <i class="bi bi-gift fs-4 text-secondary"></i>
                    <span class="mt-2">Gestion des bonus</span>
                </a>
            </div>

            <!-- Colonne 4 -->
            <div class="col-md-2 my-2">
                <a href="{{ path('app_user_index') }}" type="button" class="shadow-sm btn btn-outline-secondary position-relative d-flex flex-column align-items-center w-100">
                    <i class="bi bi-people fs-4 text-secondary"></i>
                    <span class="mt-2">Liste clients</span>
                </a>
            </div>

            <!-- Colonne 5 -->
            <div class="col-md-2 my-2">
                <a href="{{ path('app_carte_sim_index') }}" type="button" class="shadow-sm btn btn-outline-secondary position-relative d-flex flex-column align-items-center w-100">
                    <i class="bi bi-sim fs-4 text-secondary"></i>
                    <span class="mt-2">Stock cartes Sim</span>
                </a>
            </div>


            
        </div>
    </div>

<div class="d-flex justify-content-center">
        <div class="row my-2 w-100">
            

            <div class="col-md-2 my-2">
                <a href="{{ path('app_banner_index') }}" class="shadow-sm btn btn-outline-secondary position-relative d-flex flex-column align-items-center w-100">
                    <i class="bi bi-image fs-4 text-secondary"></i>
                    <span class="mt-2">Bannières</span>
                   
                </a>
            </div>

            <div class="col-md-2 my-2">
                <a href="{{path('admin_syma_business')}}" class="shadow-sm btn btn-outline-secondary position-relative d-flex flex-column align-items-center w-100">
                    <i class="bi bi-gear fs-4 text-secondary"></i>
                    <span class="mt-2">Administration</span>
                   
                </a>
            </div>
            


            <div class="col-md-2 my-2">
                <a  href="{{path('import_sim_cards')}}" class="shadow-sm btn btn-outline-secondary position-relative d-flex flex-column align-items-center w-100">
                                     <i class="bi bi-cloud-upload fs-4 text-primary"></i>

                    <span class="mt-2">Import via CSV</span>
                   
                </a>
            </div>
            <div class="col-md-2 my-2">
                <a  href="{{path('app_pending_sim_cards_index')}}" class="shadow-sm btn btn-outline-secondary position-relative d-flex flex-column align-items-center w-100">
                                     <i class="bi bi-sim fs-4 text-primary"></i>

                    <span class="mt-2">Base préprod</span>
                   
                </a>
            </div>

            <!-- Colonne 1 -->
            <div class="col-md-2 my-2">
    <a href="#" class="shadow-sm btn btn-primary position-relative d-flex flex-column align-items-center w-100" data-bs-toggle="modal" data-bs-target="#confirmModal">
        <i class="bi bi-arrow-clockwise fs-4 text-white"></i>
        <span class="mt-2">Usages mensuel</span>
    </a>
</div>

<!-- Modal -->
<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmModalLabel">Confirmer la réinitialisation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Êtes-vous sûr de vouloir réinitialiser les usages mensuels de tous les utilisateurs ? Cette action est irréversible.</p>
                <!-- Formulaire de mot de passe dans le modal -->
            <form action="{{ path('reset_user_properties') }}" method="POST">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="password" class="form-label">Entrez le mot de passe pour réinitialiser les usages :</label>
                        <input type="password" class="form-control" id="password" name="password" placeholder="Mot de passe secret" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Confirmer la rénitialisation pour tous les utilisateurs</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                </div>
            </form>

            </div>
        </div>
    </div>
</div>

        </div>
</div>
</div>

<script>
  const updateCommandesData = async () => {
    try {
      const response = await axios.get("/api/commande");
      localStorage.setItem('commandesData', JSON.stringify(response.data)); // Stocker les données sous forme de chaîne JSON
    } catch (error) {
      console.error("Erreur lors de la récupération des commandes:", error);
    }
  };

  // Fonction pour récupérer les données de localStorage
  const getCommandesFromLocalStorage = () => {
    const commandesJson = localStorage.getItem('commandesData'); // Remplacez 'commandesData' par la clé que vous utilisez
    return commandesJson ? JSON.parse(commandesJson) : []; // Convertir en objet JavaScript
  };

  // Fonction pour mettre à jour le nombre total de commandes en attente
  const updateTotalEnAttente = (commandes) => {
    const totalEnAttente = commandes.filter(commande => commande.status === 'en_attente').length;

    // Mettre à jour le DOM avec le nombre total des commandes en attente
    document.getElementById('totalEnAttente').textContent = totalEnAttente;
  };

  // Fonction pour mettre à jour les commandes à intervalle régulier
  const updateCommandesInterval = async () => {
    await updateCommandesData(); // Mettre à jour les données depuis l'API
    const commandesData = getCommandesFromLocalStorage(); // Récupérer les données mises à jour
    console.log("Données de commandes :", commandesData); // Affichez les données
    updateTotalEnAttente(commandesData); // Mettre à jour le total en attente
  };

  // Mettre à jour les commandes toutes les 3 secondes (3000 ms)
  setInterval(updateCommandesInterval, 3000); 

  // Appel initial pour mettre à jour le total en attente immédiatement
  updateCommandesInterval();
</script>

	

