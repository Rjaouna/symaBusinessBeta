<html>
    <head>
        <meta charset="UTF-8">
        <title>{% block title %}Welcome!{% endblock %}</title>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <script src='https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js'></script>

        
        <!-- Icône de la page -->
        <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 128 128%22><text y=%221.2em%22 font-size=%2296%22>⚫️</text><text y=%221.3em%22 x=%220.2em%22 font-size=%2276%22 fill=%22%23fff%22>sf</text></svg>">
        
        <!-- Lien vers la bibliothèque Bootstrap Icons -->
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css">

        {% block stylesheets %}
        <!-- Lien vers la feuille de style Bootstrap -->
        <link rel="stylesheet" href="{{ asset('assets/css/bootstrap.min.css') }}">
        <!-- Table jQuery -->
        <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css">
        {% endblock %}
        
        {% block javascripts %}

        <!-- Scripts nécessaires pour le fonctionnement de Bootstrap -->
        <script src="{{ asset('assets/js/bootstrap.bundle.min.js') }}" data-manual=""></script>
        <!-- Script personnalisé -->
        <script src="{{ asset('assets/js/custom.js') }}" data-manual=""></script>
        <!-- Prism.js (peut-être pour la coloration syntaxique) -->
        <script src="{{ asset('assets/js/prism.js') }}" data-manual=""></script>
        {# Inclure le js pour les graphes #}
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <!-- Import d'Axios depuis un CDN -->
        <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
        {# API User information pour le left wideget #}
        <script  type="module" src="{{ asset('assets/js/api/commandeInformations.js') }}" ></script>
        {# Initialisation de dataTable #}
        <script  type="module" src="{{ asset('assets/js/dataTableInit.js') }}" defer></script>
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
        

        {% endblock %}
    </head>
    
    <body>
	<div class="container-fluid my-3 rounded  bg-white">
<h4 class="mb-3 border-bottom border-secondary pb-2">
    <i class="text-secondary bi bi-upc-scan fs-2 text-secondary"></i> Scannez une carte SIM</h4>

<form id="biperForm">
    <input class="w-100 form-control font-weight-bold" type="text" id="serialNumber" name="serialNumber" required maxlength="14" placeholder="Scannez un code !" style="font-size: 20px;">
    <input type="hidden" readonly id="clientId" value="{{ clientId }}"> {# Remplacez par le client ID dynamique si nécessaire #}
</form>

<p class ="py-2 font-weight-bold" id="responseMessage"></p> {# Zone pour afficher les messages de réponse #}
<a href="{{path('users_with_orders')}}" type="button" class="btn btn-primary w-100 mb-5" style="font-size: 17px;">Retour à la liste des commandes</a>
</div>
</body>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
   document.getElementById('serialNumber').addEventListener('input', function() {
       const serialNumber = this.value;
       const clientId = document.getElementById('clientId').value;

       // Loggez le numéro de série et le client ID
       console.log("Numéro de série:", serialNumber);
       console.log("Client ID:", clientId);

       // Vérifiez si le nombre de caractères est 14
       if (serialNumber.length === 14) {
           // Envoyer la requête dès que le nombre de caractères atteint 14
           axios.post(`/api/biper/${clientId}`, { serialNumber })
               .then(response => {
                   document.getElementById('responseMessage').innerText = response.data.success || response.data.error;
               })
               .catch(error => {
                   console.error("Erreur lors de l'envoi:", error.response.data); // Loggez l'erreur pour obtenir plus de détails
                   const errorMsg = error.response ? error.response.data.error : 'Une erreur est survenue.';
                   document.getElementById('responseMessage').innerText = errorMsg;
               });
       }
   });
</script>
