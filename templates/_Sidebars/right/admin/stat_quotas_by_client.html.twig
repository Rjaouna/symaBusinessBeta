<div class="mt-4 mb-2 px-4 py-3 rounded shadow-sm bg-white">
  <div class="d-flex align-items-center px-2">
   <div class="title-icon bg-primary rounded shadow-sm" 
     style="width: 30px; height: 30px; border-radius: 50%; margin-right: 10px; 
            background-image: url('{{ asset('assets/img/boost@4x.webp') }}'); 
            background-size: calc(100% - 4px); 
            background-repeat: no-repeat; 
            background-position: center; 
            padding: 2px;">
</div>



    <h4 class="mb-0 text-secondary" style=" font-weight: bold;letter-spacing: -0.5px;">Stat quotas attribués </h4>
  </div>
  <canvas id="quotaChart" width="400" height="200"></canvas>
</div>

<script>
    let quotaChart;

    // Fonction pour initialiser un graphique avec des valeurs par défaut
    function initializeChart() {
        const ctx = document.getElementById('quotaChart').getContext('2d');

        // Données par défaut (graphique vide avec 0)
        const defaultData = {
            labels: ['Chargement...'],
            datasets: [{
                label: 'Statistiques des quotas attribués',
                data: [0],
                backgroundColor: 'rgba(54, 162, 235, 0.5)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }]
        };

        const defaultOptions = {
            responsive: true,
            plugins: {
                legend: {
                    display: true,
                    position: 'top'
                },
                tooltip: {
                    enabled: true
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    title: {
                        display: true,
                    }
                },
                x: {
                    title: {
                        display: true,
                    }
                }
            }
        };

        // Initialiser le graphique avec les données par défaut
        quotaChart = new Chart(ctx, {
            type: 'bar',
            data: defaultData,
            options: defaultOptions
        });
    }

    async function fetchUserStats() {
        try {
            const response = await axios.get("/api/users"); // Remplace par l'URL correcte de ton API
            const users = Array.isArray(response.data) ? response.data : [];

            // Vérifie si les quotas sont définis et regroupe les utilisateurs
            const quotaCounts = users.reduce((acc, user) => {
                const quotaName = user?.quotas?.nom; // Vérifie que quotas et nom existent
                if (quotaName) {
                    acc[quotaName] = (acc[quotaName] || 0) + 1;
                }
                return acc;
            }, {});

            if (Object.keys(quotaCounts).length === 0) {
                console.warn("Aucune donnée de quota disponible.");
                return;
            }

            // Préparer les données pour le graphe
            const labels = Object.keys(quotaCounts);
            const data = Object.values(quotaCounts);

            // Mettre à jour le graphique avec les vraies données
            quotaChart.data.labels = labels;
            quotaChart.data.datasets[0].data = data;

            // Mettre à jour le graphique
            quotaChart.update();
        } catch (error) {
            console.error("Erreur lors de la récupération des statistiques des quotas:", error);
            alert("Une erreur s'est produite lors du chargement des statistiques. Veuillez réessayer plus tard.");
        }
    }

    // Initialiser le graphique avec des valeurs par défaut
    initializeChart();

    // Appeler la fonction pour récupérer les données
    fetchUserStats();
</script>
