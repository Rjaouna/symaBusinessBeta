<div class="mt-4 mb-2 px-4 py-3 rounded shadow-sm bg-white">
<canvas id="commandesParClientChart" width="400" height="200"></canvas>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
const updateCommandesParClientChart = async () => {
  try {
    const response = await axios.get("/api/commande");
    const commandes = response.data;

    // Créer un objet pour compter les commandes par client et statut
    const clientStatusCounts = {};

    // Compter les commandes par client et statut
    commandes.forEach(commande => {
      const client = commande.code_client; // Utiliser le code client
      const status = commande.status;

      if (!clientStatusCounts[client]) {
        clientStatusCounts[client] = {
          validee: 0,
          en_attente: 0,
          en_cours: 0,
        };
      }
      clientStatusCounts[client][status]++;
    });

    // Préparer les données pour le graphique
    const clients = Object.keys(clientStatusCounts);
    const dataValidee = clients.map(client => clientStatusCounts[client].validee || 0);
    const dataEnAttente = clients.map(client => clientStatusCounts[client].en_attente || 0);
    const dataEnCours = clients.map(client => clientStatusCounts[client].en_cours || 0);

    // Créer le graphique
    const ctx = document.getElementById('commandesParClientChart').getContext('2d');
    const commandesParClientChart = new Chart(ctx, {
      type: 'bar',
      data: {
        labels: clients,
        datasets: [
          {
            label: 'Validées',
            data: dataValidee,
            backgroundColor: 'rgba(75, 192, 192, 0.6)',
          },
          {
            label: 'En Attente',
            data: dataEnAttente,
            backgroundColor: 'rgba(255, 99, 132, 0.6)',
          },
          {
            label: 'En Cours',
            data: dataEnCours,
            backgroundColor: 'rgba(255, 206, 86, 0.6)',
          },
        ]
      },
      options: {
        responsive: true,
        scales: {
          y: {
            beginAtZero: true
          }
        },
        plugins: {
          legend: {
            position: 'top',
          },
          title: {
            display: true,
            text: 'Commandes par Client et par Statut'
          }
        }
      }
    });

  } catch (error) {
    console.error("Erreur lors de la récupération des commandes:", error);
  }
};

updateCommandesParClientChart();
</script>
