<!-- Graphique des quotas (ApexCharts) -->
<div class="mt-4 mb-2 px-4 py-3 rounded shadow-sm bg-white">
    <div id="quota-chart" style="height: 280px;"></div>
</div>

<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>

<script>
function renderQuotaChart(userData) {
    if (!userData) {
        console.error('Aucune donnée utilisateur trouvée pour le graphique');
        return;
    }

    const quotaData = [
        userData.quotas.sim5Quota,
        userData.quotas.sim10Quota,
        userData.quotas.sim15Quota,
        userData.quotas.sim20Quota,
    ];

    const consumptionData = [
        userData.sim5Usage,
        userData.sim10Usage,
        userData.sim15Usage,
        userData.sim20Usage,
    ];

    const percentageUsageData = consumptionData.map((usage, index) => {
        const quota = quotaData[index];
        return quota > 0 ? ((usage / quota) * 100).toFixed(2) : 0;
    });

    const ctx = document.querySelector('#quota-chart');

    if (!ctx) {
        console.error('Élément du graphique non trouvé');
        return;
    }

    const chartBarStacked = new ApexCharts(ctx, {
        chart: { 
            type: 'bar', 
            height: 280, 
            stacked: true,
            toolbar: { show: false }
        },
        plotOptions: { 
            bar: { horizontal: false } 
        },
        series: [
            { name: 'Utilisation (%)', data: percentageUsageData }
        ],
        xaxis: { 
            categories: ['Carte Sim 05', 'Carte Sim 10', 'Carte Sim 15', 'Carte Sim 20'] 
        },
        colors: ['#3498db'],
        fill: { opacity: 1 },
        dataLabels: { 
            enabled: true,
            formatter: function (val) {
                return `${val}%`;
            },
            style: {
                colors: ['#fff']
            }
        },
        legend: {
            position: 'bottom'
        },
        tooltip: {
            y: {
                formatter: function (val) {
                    return `${val}% utilisé`;
                }
            }
        }
    });

    chartBarStacked.render().catch((error) => {
        console.error('Erreur lors du rendu du graphique :', error);
    });
}

// Appeler le graphique au chargement de la page
document.addEventListener('DOMContentLoaded', function() {
    const userData = JSON.parse(localStorage.getItem('userData')); // Récupérer les données utilisateur depuis localStorage
    renderQuotaChart(userData);
});
</script>
